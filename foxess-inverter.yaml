esphome:
  name: foxess-inverter
  includes:
    - foxess_t_series.h

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: VERBOSE
  baud_rate: 0

# Enable Home Assistant API
api:

ota:
  password: "***********************"

wifi:
  ssid: "***************************"
  password: "*********************"
  
#  manual_ip:
#    static_ip: xxx.xxx.xxx.xx
#    gateway: xxx.xxx.xxx.x
#    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Inverter Fallback Hotspot"
    password: "*****************+"

captive_portal:
    
uart:
  id: uart_bus
  tx_pin: 3
  rx_pin: 1
  baud_rate: 9600
  #debug:

button:
  - platform: restart
    name: "Foxess inverter restart"
    
switch:
  - platform: gpio
    pin: 4
    name: "T-Series sending mode" #if "on" reading from inverter doesn't work!
    internal: true #switch is not exposed to HA frontend, should you ever need to write to the inverter, just comment this line
    
text_sensor:
  - platform: template
    name: "T-Series Inverter Mode"
    id: "inverter_mode_text_sensor"
    icon: mdi:solar-power-variant

sensor:
- platform: custom
  lambda: |-
    auto foxesssensors = new foxesscomponent(id(uart_bus));
    App.register_component(foxesssensors);
    return {\
    foxesssensors->grid_power, \
    foxesssensors->generation_power, \
    foxesssensors->loads_power, \
    foxesssensors->grid_voltage_r, \
    foxesssensors->grid_current_r, \
    foxesssensors->grid_frequency_r, \
    foxesssensors->grid_power_r, \
    foxesssensors->grid_voltage_s, \
    foxesssensors->grid_current_s, \
    foxesssensors->grid_frequency_s, \
    foxesssensors->grid_power_s, \
    foxesssensors->grid_voltage_T, \
    foxesssensors->grid_current_T, \
    foxesssensors->grid_frequency_T, \
    foxesssensors->grid_power_T, \
    foxesssensors->pv1_voltage, \
    foxesssensors->pv1_current, \
    foxesssensors->pv2_voltage, \
    foxesssensors->pv2_current, \
    
    
    foxesssensors->boost_temperature, \
    foxesssensors->inverter_temperature, \
    foxesssensors->ambient_temperature, \
    foxesssensors->today_yield, \
    foxesssensors->generation_total, \
    foxesssensors->pv1_power, \
    foxesssensors->pv2_power, \

    foxesssensors->inverter_state\
    };

  sensors:
  - name: "Moc pobierana z sieci"
    id: "grid_power"
    unit_of_measurement: W
    icon: mdi:lightning-bolt

  - name: "Moc produkowana przez falownik"
    id: "generation_power"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    
  - name: "T-Series loads Power"
    id: "loads_power"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    
  - name: "Napięcie L1"
    id: "grid_voltage_r"
    unit_of_measurement: V
    accuracy_decimals: 1
    icon: mdi:flash
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Prąd L1"
    id: "grid_current_r"
    unit_of_measurement: A
    accuracy_decimals: 1
    icon: mdi:current-ac
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Częstotliwość L1"
    id: "grid_Frequency_r"
    unit_of_measurement: Hz
    accuracy_decimals: 2
    icon: mdi:sine-wave
    filters:
    - multiply: 0.01
    - throttle: 1h
    
  - name: "Moc L1"
    id: "grid_power_r"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    
  - name: "Napięcie L2"
    id: "grid_voltage_s"
    unit_of_measurement: V
    accuracy_decimals: 1
    icon: mdi:flash
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Prąd L2"
    id: "grid_current_s"
    unit_of_measurement: A
    accuracy_decimals: 1
    icon: mdi:current-ac
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Częstotliwość L2"
    id: "grid_Frequency_s"
    unit_of_measurement: Hz
    accuracy_decimals: 2
    icon: mdi:sine-wave
    filters:
    - multiply: 0.01
    - throttle: 1h
    
  - name: "Moc L2"
    id: "grid_power_s"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    
  - name: "Napięcie L3"
    id: "grid_voltage_T"
    unit_of_measurement: V
    accuracy_decimals: 1
    icon: mdi:flash
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Prąd L3"
    id: "grid_current_t"
    unit_of_measurement: A
    accuracy_decimals: 1
    icon: mdi:current-ac
    filters:
    - multiply: 0.1
    - throttle: 1h
    
  - name: "Częstotliwość L3"
    id: "grid_Frequency_t"
    unit_of_measurement: Hz
    accuracy_decimals: 2
    icon: mdi:sine-wave
    filters:
    - multiply: 0.01
    - throttle: 1h
    
  - name: "Moc L3"
    id: "grid_power_t"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    
  - name: "PV1 Napięcie"
    id: "pv1_voltage"
    unit_of_measurement: V
    accuracy_decimals: 1
    icon: mdi:flash
    filters:
    - multiply: 0.1
    
  - name: "PV1 Prąd"
    id: "pv1_current"
    unit_of_measurement: A
    accuracy_decimals: 1
    icon: mdi:current-ac
    filters:
    - multiply: 0.1
    
  - name: "PV2 Napięcie"
    id: "pv2_voltage"
    unit_of_measurement: V
    accuracy_decimals: 1
    icon: mdi:flash
    filters:
    - multiply: 0.1
    
  - name: "PV2 Prąd"
    id: "pv2_current"
    unit_of_measurement: A
    accuracy_decimals: 1
    icon: mdi:current-ac
    filters:
    - multiply: 0.1
    
      
  - name: "Temperatura Falownika" #boost temperature and inverter temperature seem to be always the same
    id: "inverter_temperature"
    unit_of_measurement: °C
    filters:
    - throttle: 10min
    
  - name: "Temperatura Otoczenia"
    id: "ambient_temperature"
    unit_of_measurement: °C
    filters:
    - throttle: 10min
    
  - name: "Dzienna Produkcja"
    id: "today_yield"
    unit_of_measurement: kWh
    accuracy_decimals: 1
    icon: mdi:solar-power
    filters:
    - multiply: 0.1
    
  - name: "Sumaryczna Produkcja"
    id: "generation_total"
    unit_of_measurement: kWh
    device_class: energy #for use in energy dashboard
    state_class: total_increasing #for use in energy dashboard
    accuracy_decimals: 1
    icon: mdi:solar-power
    filters:
    - multiply: 0.1
    
  - name: "PV1 Moc" #rs485 comm says this is always 0W, so this is calculated in the .h file by voltage*current
    id: "pv1_power"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    accuracy_decimals: 1
    
  - name: "PV2 Moc" #rs485 comm says this is always 0W, so this is calculated in the .h file by voltage*current
    id: "pv2_power"
    unit_of_measurement: W
    icon: mdi:lightning-bolt
    accuracy_decimals: 1
    

    
  - name: "T-Series Inverter State"
    id: "inverter_state"
    internal: true
    on_value:
      then:
        - lambda: |-
            if(x==0) {
              id(inverter_mode_text_sensor).publish_state("Offline");
            }
            else if(x==1) {
              id(inverter_mode_text_sensor).publish_state("Online");
            }
            else if(x==2) {
              id(inverter_mode_text_sensor).publish_state("Error");
            }
            else {
              id(inverter_mode_text_sensor).publish_state("Waiting for response...");
            }
